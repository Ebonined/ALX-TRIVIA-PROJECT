{"ast":null,"code":"var _jsxFileName = \"/home/ebonined/Workspaces/PYTHON/PROJECTS/ALX-TRIVIA-PROJECT/frontend/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false\n    };\n  }\n\n  flipVisibility() {\n    this.setState({\n      visibleAnswer: !this.state.visibleAnswer\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          question = _this$props.question,\n          answer = _this$props.answer,\n          category = _this$props.category,\n          difficulty = _this$props.difficulty;\n    const categoryType = category['type'];\n    console.log(categoryType);\n    return React.createElement(\"div\", {\n      className: \"Question-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, question), React.createElement(\"div\", {\n      className: \"Question-status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"category\",\n      alt: \"\".concat(categoryType.toLowerCase()),\n      src: \"\".concat(categoryType.toLowerCase(), \".svg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"difficulty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Difficulty: \", difficulty), React.createElement(\"img\", {\n      src: \"delete.png\",\n      alt: \"delete\",\n      className: \"delete\",\n      onClick: () => this.props.questionAction('DELETE'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"show-answer button\",\n      onClick: () => this.flipVisibility(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.visibleAnswer ? 'Hide' : 'Show', \" Answer\"), React.createElement(\"div\", {\n      className: \"answer-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        visibility: this.state.visibleAnswer ? 'visible' : 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Answer: \", answer)));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/home/ebonined/Workspaces/PYTHON/PROJECTS/ALX-TRIVIA-PROJECT/frontend/src/components/Question.js"],"names":["React","Component","Question","constructor","state","visibleAnswer","flipVisibility","setState","render","props","question","answer","category","difficulty","categoryType","console","log","toLowerCase","questionAction","visibility"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6BAAP;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAEDC,EAAAA,cAAc,GAAG;AACf,SAAKC,QAAL,CAAc;AAAEF,MAAAA,aAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA7B,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBAC4C,KAAKC,KADjD;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UACmBC,QADnB,eACmBA,QADnB;AAAA,UAC6BC,UAD7B,eAC6BA,UAD7B;AAEP,UAAMC,YAAY,GAAGF,QAAQ,CAAC,MAAD,CAA7B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,QAA3B,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,GAAG,YAAKI,YAAY,CAACG,WAAb,EAAL,CAFL;AAGE,MAAA,GAAG,YAAKH,YAAY,CAACG,WAAb,EAAL,SAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAyCJ,UAAzC,CANF,EAOE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,SAAS,EAAC,QAHZ;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWS,cAAX,CAA0B,QAA1B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFF,EAgBE;AACE,MAAA,SAAS,EAAC,oBADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKZ,cAAL,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKF,KAAL,CAAWC,aAAX,GAA2B,MAA3B,GAAoC,MAJvC,YAhBF,EAsBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLc,QAAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,aAAX,GAA2B,SAA3B,GAAuC;AAD9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKWM,MALX,CADF,CAtBF,CADF;AAkCD;;AAlD8B;;AAqDjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport '../stylesheets/Question.css';\r\n\r\n\r\nclass Question extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      visibleAnswer: false,\r\n    };\r\n  }\r\n\r\n  flipVisibility() {\r\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\r\n  }\r\n\r\n  render() {\r\n    const { question, answer, category, difficulty } = this.props;\r\n    const categoryType = category['type']\r\n    console.log(categoryType)\r\n    return (\r\n      <div className='Question-holder'>\r\n        <div className='Question'>{question}</div>\r\n        <div className='Question-status'>\r\n          <img\r\n            className='category'\r\n            alt={`${categoryType.toLowerCase()}`}\r\n            src={`${categoryType.toLowerCase()}.svg`}\r\n          />\r\n          <div className='difficulty'>Difficulty: {difficulty}</div>\r\n          <img\r\n            src='delete.png'\r\n            alt='delete'\r\n            className='delete'\r\n            onClick={() => this.props.questionAction('DELETE')}\r\n          />\r\n        </div>\r\n        <div\r\n          className='show-answer button'\r\n          onClick={() => this.flipVisibility()}\r\n        >\r\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\r\n        </div>\r\n        <div className='answer-holder'>\r\n          <span\r\n            style={{\r\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\r\n            }}\r\n          >\r\n            Answer: {answer}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n"]},"metadata":{},"sourceType":"module"}